service:
  name: softnote

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-offline
provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-refresh-tokens
    S3_IMAGE_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-images
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:PutObject
        - s3:GetObject
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'
        - 'arn:aws:s3:::${self:provider.environment.S3_IMAGE_BUCKET}/*'

custom:
  webpack:
    includeModules: true
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      migrate: true
  s3:
    host: localhost
    directory: /tmp
    cors: ./s3-cors.xml
    allowMismatchedSignatures: true

functions:
  hello:
    handler: src/handlers.hello
    events:
      - http:
          method: get
          path: hello
  graphql:
    handler: src/handlers.graphql
    events:
      - http:
          method: ANY
          path: graphql
          cors:
            origins:
              - 'http://noted-development.s3-website-eu-west-1.amazonaws.com'
              - 'https://notehub.xyz'
              - 'https://www.notehub.xyz'
            allowCredentials: true
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Owner

resources:
  Resources:
    SigningKeyDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    StorageBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:provider.environment.S3_IMAGE_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - 'http://localhost:8080'
                - 'http://noted-development.s3-website-eu-west-1.amazonaws.com'
                - 'https://notehub.xyz'
                - 'https://www.notehub.xyz'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
              MaxAge: 3000